<?xml version="1.0" encoding="utf-8"?>
<test-group name="langlib type param test">
    <description>tests for langlib type param</description>
    <test name="typeParamImported-test">
        <description>imported type param test</description>
        <source>
            <file>test-src/type-param/imported_type_param.bal</file>
        </source>
        <steps>
            <run>
                <callFunction name="testImportedModuleTypeParam1"/>
                <callFunction name="testImportedModuleTypeParam2">
                    <assert>
                        <return>
                            <int>100</int>
                        </return>
                    </assert>
                </callFunction>
            </run>
        </steps>
    </test>
    <test name="typeParamBound-test">
        <description>type param bound type test</description>
        <source>
            <file>test-src/type-param/type_param_bound_type_as_cet.bal</file>
        </source>
        <steps>
            <run>
                <callFunction name="testNumericTypeAsBoundRestParam"/>
                <callFunction name="testStructedTypeAsBoundRestParam"/>
                <callFunction name="testIntLiteralAsByte"/>
                <callFunction name="testIntAndFloatLiteralAsDecimal"/>
                <callFunction name="testBroadTypeAsCET"/>
            </run>
        </steps>
    </test>
    <test name="typeParamInfer-test">
        <description>type param infer test</description>
        <source>
            <file>test-src/type-param/type_param_infer_test.bal</file>
        </source>
        <steps>
            <run>
                <callFunction name="testArrayFunctionInfer"/>
                <callFunction name="testMapFunctionInfer"/>
            </run>
        </steps>
    </test>
    <test name="typeParamNarrowingUnionReturn-test">
        <description>type param narrowing for union return test</description>
        <source>
            <file>test-src/type-param/type_param_narrowing_for_union_return.bal</file>
        </source>
        <steps>
            <run>
                <callFunction name="testSimpleUnion"/>
                <callFunction name="testUnionOfMaps"/>
                <callFunction name="testStringIntFloatSimpleAndArrayUnion"/>
                <callFunction name="testIntFloatSimpleAndMapUnion"/>
                <callFunction name="testIntFloatSimpleArrayMapUnion"/>
                <callFunction name="testUnionOfRecordTypes"/>
                <callFunction name="testUnionOfSimpleTupleTypes"/>
            </run>
        </steps>
    </test>
</test-group>
